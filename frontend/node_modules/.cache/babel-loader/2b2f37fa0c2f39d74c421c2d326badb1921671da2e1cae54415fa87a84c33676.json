{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\OneDrive\\\\Desktop\\\\dashtrae\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport apiService from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [portfolioSummary, setPortfolioSummary] = useState({\n    total_value: 0,\n    daily_change_percent: 0,\n    assets: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Function to fetch portfolio data\n    const fetchPortfolioData = async () => {\n      try {\n        setLoading(true);\n        const summary = await apiService.getPortfolioSummary();\n        setPortfolioSummary(summary);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching portfolio data:', err);\n        setError('Failed to load portfolio data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Initial fetch\n    fetchPortfolioData();\n\n    // Set up interval for periodic updates\n    const intervalId = setInterval(fetchPortfolioData, 60000); // Update every minute\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      totalValue: portfolioSummary.total_value,\n      dailyChange: portfolioSummary.daily_change_percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading portfolio data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Portfolio Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"More components coming soon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dbnMfCbvC6Xo4TuXuRRV4cEOEKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","apiService","jsxDEV","_jsxDEV","App","_s","portfolioSummary","setPortfolioSummary","total_value","daily_change_percent","assets","loading","setLoading","error","setError","fetchPortfolioData","summary","getPortfolioSummary","err","console","intervalId","setInterval","clearInterval","className","children","totalValue","dailyChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/renzo/OneDrive/Desktop/dashtrae/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\nimport apiService from './services/api';\r\n\r\nfunction App() {\r\n  const [portfolioSummary, setPortfolioSummary] = useState({\r\n    total_value: 0,\r\n    daily_change_percent: 0,\r\n    assets: []\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch portfolio data\r\n    const fetchPortfolioData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const summary = await apiService.getPortfolioSummary();\r\n        setPortfolioSummary(summary);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error('Error fetching portfolio data:', err);\r\n        setError('Failed to load portfolio data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Initial fetch\r\n    fetchPortfolioData();\r\n\r\n    // Set up interval for periodic updates\r\n    const intervalId = setInterval(fetchPortfolioData, 60000); // Update every minute\r\n\r\n    // Clean up interval on component unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header \r\n        totalValue={portfolioSummary.total_value} \r\n        dailyChange={portfolioSummary.daily_change_percent} \r\n      />\r\n      \r\n      {loading && <div className=\"loading\">Loading portfolio data...</div>}\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      <main className=\"main-content\">\r\n        {/* Other components will be added here */}\r\n        <div className=\"placeholder\">\r\n          <h2>Portfolio Dashboard</h2>\r\n          <p>More components coming soon...</p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}