{"ast":null,"code":"var _jsxFileName = \"E:\\\\vestra-main\\\\frontend\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport './Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioChart = ({\n  data,\n  selectedAsset,\n  timeFilter\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (!data || !data.dates || !data.values || data.dates.length === 0) {\n      return;\n    }\n\n    // Destroy previous chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Filter data based on time filter\n    let filteredDates = [...data.dates];\n    let filteredValues = [...data.values];\n    if (timeFilter === '1h') {\n      // For demo, just take the last 24 points and pretend they're hourly\n      filteredDates = filteredDates.slice(-24);\n      filteredValues = filteredValues.slice(-24);\n    } else if (timeFilter === '3h') {\n      // For demo, take the last 36 points\n      filteredDates = filteredDates.slice(-36);\n      filteredValues = filteredValues.slice(-36);\n    } else if (timeFilter === '1d') {\n      // For demo, take the last 48 points\n      filteredDates = filteredDates.slice(-48);\n      filteredValues = filteredValues.slice(-48);\n    } else if (timeFilter === '1w') {\n      // For demo, take all points but sample every 4th one\n      filteredDates = filteredDates.filter((_, i) => i % 4 === 0);\n      filteredValues = filteredValues.filter((_, i) => i % 4 === 0);\n    }\n    // For 1m, use all data\n\n    // Create gradient for the line\n    const gradient = ctx.createLinearGradient(0, 0, 0, 300);\n    gradient.addColorStop(0, 'rgba(248, 227, 107, 0.5)');\n    gradient.addColorStop(1, 'rgba(248, 227, 107, 0)');\n\n    // Siempre mostrar el balance total del portafolio, ignorando el activo seleccionado\n    const chartLabel = 'Balance Total del Portafolio';\n\n    // Create the chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: filteredDates,\n        datasets: [{\n          label: chartLabel,\n          data: filteredValues,\n          borderColor: '#f8e36b',\n          backgroundColor: gradient,\n          borderWidth: 2,\n          pointRadius: 0,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: '#f8e36b',\n          pointHoverBorderColor: '#fff',\n          pointHoverBorderWidth: 2,\n          tension: 0.4,\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n            backgroundColor: '#111',\n            titleColor: '#f8e36b',\n            bodyColor: '#fff',\n            borderColor: '#333',\n            borderWidth: 1,\n            padding: 10,\n            displayColors: false,\n            callbacks: {\n              label: function (context) {\n                return `$${context.parsed.y.toFixed(2)}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              display: false\n            }\n          },\n          y: {\n            grid: {\n              color: '#222',\n              drawBorder: false\n            },\n            ticks: {\n              color: '#888',\n              padding: 10,\n              callback: function (value) {\n                return value >= 1000 ? `${value / 1000}k` : value;\n              }\n            }\n          }\n        },\n        interaction: {\n          mode: 'nearest',\n          axis: 'x',\n          intersect: false\n        }\n      }\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, selectedAsset, timeFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = PortfolioChart;\nexport default PortfolioChart;\nvar _c;\n$RefreshReg$(_c, \"PortfolioChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","PortfolioChart","data","selectedAsset","timeFilter","_s","chartRef","chartInstance","dates","values","length","current","destroy","ctx","getContext","filteredDates","filteredValues","slice","filter","_","i","gradient","createLinearGradient","addColorStop","chartLabel","type","labels","datasets","label","borderColor","backgroundColor","borderWidth","pointRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","tension","fill","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","titleColor","bodyColor","padding","displayColors","callbacks","context","parsed","y","toFixed","scales","x","grid","drawBorder","ticks","color","callback","value","interaction","axis","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/vestra-main/frontend/src/components/Chart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport './Chart.css';\n\nconst PortfolioChart = ({ data, selectedAsset, timeFilter }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    if (!data || !data.dates || !data.values || data.dates.length === 0) {\n      return;\n    }\n\n    // Destroy previous chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    const ctx = chartRef.current.getContext('2d');\n\n    // Filter data based on time filter\n    let filteredDates = [...data.dates];\n    let filteredValues = [...data.values];\n\n    if (timeFilter === '1h') {\n      // For demo, just take the last 24 points and pretend they're hourly\n      filteredDates = filteredDates.slice(-24);\n      filteredValues = filteredValues.slice(-24);\n    } else if (timeFilter === '3h') {\n      // For demo, take the last 36 points\n      filteredDates = filteredDates.slice(-36);\n      filteredValues = filteredValues.slice(-36);\n    } else if (timeFilter === '1d') {\n      // For demo, take the last 48 points\n      filteredDates = filteredDates.slice(-48);\n      filteredValues = filteredValues.slice(-48);\n    } else if (timeFilter === '1w') {\n      // For demo, take all points but sample every 4th one\n      filteredDates = filteredDates.filter((_, i) => i % 4 === 0);\n      filteredValues = filteredValues.filter((_, i) => i % 4 === 0);\n    }\n    // For 1m, use all data\n\n    // Create gradient for the line\n    const gradient = ctx.createLinearGradient(0, 0, 0, 300);\n    gradient.addColorStop(0, 'rgba(248, 227, 107, 0.5)');\n    gradient.addColorStop(1, 'rgba(248, 227, 107, 0)');\n\n    // Siempre mostrar el balance total del portafolio, ignorando el activo seleccionado\n    const chartLabel = 'Balance Total del Portafolio';\n    \n    // Create the chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: filteredDates,\n        datasets: [\n          {\n            label: chartLabel,\n            data: filteredValues,\n            borderColor: '#f8e36b',\n            backgroundColor: gradient,\n            borderWidth: 2,\n            pointRadius: 0,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: '#f8e36b',\n            pointHoverBorderColor: '#fff',\n            pointHoverBorderWidth: 2,\n            tension: 0.4,\n            fill: true\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n            backgroundColor: '#111',\n            titleColor: '#f8e36b',\n            bodyColor: '#fff',\n            borderColor: '#333',\n            borderWidth: 1,\n            padding: 10,\n            displayColors: false,\n            callbacks: {\n              label: function(context) {\n                return `$${context.parsed.y.toFixed(2)}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              display: false\n            }\n          },\n          y: {\n            grid: {\n              color: '#222',\n              drawBorder: false\n            },\n            ticks: {\n              color: '#888',\n              padding: 10,\n              callback: function(value) {\n                return value >= 1000 ? `${value/1000}k` : value;\n              }\n            }\n          }\n        },\n        interaction: {\n          mode: 'nearest',\n          axis: 'x',\n          intersect: false\n        }\n      }\n    });\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, selectedAsset, timeFilter]);\n\n  return (\n    <div className=\"chart-wrapper\">\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default PortfolioChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}