{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\n// Servicio para interactuar con la API del backend\nconst apiService = {\n  // Obtener el resumen del portfolio\n  getPortfolioSummary: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/portfolio/summary/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener el resumen del portfolio:', error);\n      throw error;\n    }\n  },\n  // Obtener el historial del portfolio\n  getPortfolioHistory: async (days = 30) => {\n    try {\n      const response = await axios.get(`${API_URL}/portfolio/history/?days=${days}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener el historial del portfolio:', error);\n      throw error;\n    }\n  },\n  // Obtener la asignación de activos\n  getPortfolioAllocation: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/portfolio/allocation/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener la asignación del portfolio:', error);\n      throw error;\n    }\n  },\n  // Agregar una nueva transacción\n  addTransaction: async transactionData => {\n    try {\n      const response = await axios.post(`${API_URL}/transactions/`, transactionData);\n      return response.data;\n    } catch (error) {\n      console.error('Error al agregar la transacción:', error);\n      throw error;\n    }\n  },\n  // Obtener todas las transacciones\n  getTransactions: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/transactions/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener las transacciones:', error);\n      throw error;\n    }\n  },\n  // Obtener el precio actual de un activo\n  getAssetPrice: async (assetType, ticker) => {\n    try {\n      const response = await axios.get(`${API_URL}/price/${assetType}/${ticker}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener el precio de ${ticker}:`, error);\n      throw error;\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_URL","apiService","getPortfolioSummary","response","get","data","error","console","getPortfolioHistory","days","getPortfolioAllocation","addTransaction","transactionData","post","getTransactions","getAssetPrice","assetType","ticker"],"sources":["C:/Users/renzo/OneDrive/Desktop/dashtrae/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n// Servicio para interactuar con la API del backend\r\nconst apiService = {\r\n  // Obtener el resumen del portfolio\r\n  getPortfolioSummary: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/portfolio/summary/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener el resumen del portfolio:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener el historial del portfolio\r\n  getPortfolioHistory: async (days = 30) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/portfolio/history/?days=${days}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener el historial del portfolio:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener la asignación de activos\r\n  getPortfolioAllocation: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/portfolio/allocation/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener la asignación del portfolio:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Agregar una nueva transacción\r\n  addTransaction: async (transactionData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/transactions/`, transactionData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al agregar la transacción:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener todas las transacciones\r\n  getTransactions: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/transactions/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener las transacciones:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Obtener el precio actual de un activo\r\n  getAssetPrice: async (assetType, ticker) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/price/${assetType}/${ticker}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener el precio de ${ticker}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,MAAMC,UAAU,GAAG;EACjB;EACAC,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,qBAAqB,CAAC;MACjE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,mBAAmB,EAAE,MAAAA,CAAOC,IAAI,GAAG,EAAE,KAAK;IACxC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,4BAA4BS,IAAI,EAAE,CAAC;MAC9E,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,sBAAsB,EAAE,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,wBAAwB,CAAC;MACpE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAK,cAAc,EAAE,MAAOC,eAAe,IAAK;IACzC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,gBAAgB,EAAEY,eAAe,CAAC;MAC9E,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,gBAAgB,CAAC;MAC5D,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAS,aAAa,EAAE,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;IAC1C,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,UAAUgB,SAAS,IAAIC,MAAM,EAAE,CAAC;MAC3E,OAAOd,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiCW,MAAM,GAAG,EAAEX,KAAK,CAAC;MAChE,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}